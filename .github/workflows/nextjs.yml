name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main", "pages", "prod"]

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  #Test job
  test:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: https://github.com/ElMajdoubraed/Book_store/blob/main/README.md
    steps:
      - name: Check if readme exist
        run: ls & if test -f "README.md"; then echo "README.md not found"; exit 1; fi
      - name: Check if readme is not empty
        run: if [ -s "README.md" ]; then echo "README.md is empty"; exit 1; fi

  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Setup Pages
        uses: actions/configure-pages@v3
        with:
          static_site_generator: next
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Copy readme
        run: mkdir out && cp README.md out/index.html
      - name: Upload Readme
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./out

  #Check job
  check:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        run: if [! -d "$out" ]; then mkdir out; fi

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  # Cleanup job
  cleanup:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Cleanup
        run: rm -rf out
